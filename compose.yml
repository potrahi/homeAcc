services:
  accounting_db:
    image: postgres
    container_name: accounting_db
    volumes:
      - ./accounting/init:/docker-entrypoint-initdb.d:ro
      - accounting_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${ACC_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ACC_POSTGRES_PASSWORD}
      POSTGRES_DB: ${ACC_POSTGRES_DB}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  accounting:
    build: ./accounting
    container_name: accounting
    environment:
      - ACC_PORT=5000
      - SECRET_KEY=${SECRET_KEY}
      - ACC_DB_USER=${ACC_DB_USER}
      - ACC_DB_PASSWORD=${ACC_DB_PASSWORD}
      - ACC_DB_NAME=${ACC_DB_NAME}
      - ACC_DB_HOST=accounting_db
      - ACC_DB_PORT=5432
    ports:
      - "5001:5000"
    depends_on:
      accounting_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/ || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    container_name: home-frontend
    ports:
      - "3000:80"
    depends_on:
      - accounting
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

volumes:
  accounting_db:
